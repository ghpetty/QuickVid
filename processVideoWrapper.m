function processVideoWrapper(appData,duration,outpath,out_append)
% Wrapper function to create the FFmpeg command and process a
% single video.
%
% Compression values and whether to invert the video are read
% directly from the app values. Duration is input directly from
% the callback of the button pressed.
%
% GHP Oct 2022

if nargin < 3
    outpath = cd;
end
% Append something to the end of the video name. Used when
% splitting video to add a number to each video segment.
if nargin < 4
    out_append = '';
end
isNegated = logical(appData.Negate);
quality = appData.Quality;
gBlur = appData.GBlur;
trimFrames = appData.TrimFrames;
seekTime = seconds(trimFrames / appData.VR.FrameRate);
seekTime.Format = 'hh:mm:ss.SSS';
seekTime = char(seekTime);
ppmin = appData.MinPx / 255;
ppmax = appData.MaxPx / 255;
% vidname_out_full = fullfile(outpath,appData.VidName);
if ~appData.DoFixName
   vidname_out_full = fullfile(outpath,appData.VidName);
else
    vidname_out_full = fullfile(outpath,...
        strrep_multi(appData.VidName,{' ','-'},'_'));
end

setpts = 1 / appData.Setpts;
switch appData.ROIType
    
    case 'N' % No cropping
        outputProcessed = strrep(vidname_out_full,appData.VidExt,...
            ['_processed',out_append,'.mp4']);
        com = createFFmpegCommand(appData.VidName,outputProcessed,...
            'Negate',isNegated, 'Codec',appData.Codec,...
            'Quality',quality,'Duration',duration,...
            'Rotation',appData.Rotation,'Blur',gBlur,...
            'SeekTime',seekTime,...
            'PP_min',ppmin,'PP_max',ppmax,...
            'Setpts',setpts);
        system(com);
        
    case 'V'
        
        outputLeft = strrep(vidname_out_full,appData.VidExt,...
            ['_left',out_append,'.mp4']);
        outputRight = strrep(vidname_out_full,appData.VidExt,...
            ['_right',out_append,'.mp4']);
        % Run left video first
        comLeft = createFFmpegCommand(appData.VidName,outputLeft,...
            'Crop',[0,0; appData.vidROI.Position(2,1), appData.VR.Height],...
            'Negate',isNegated,'Duration',duration,...
            'Quality',quality,'Codec',appData.Codec,...
            'Rotation',appData.Rotation,'Blur',gBlur,...
            'SeekTime',seekTime,...
            'PP_min',ppmin,'PP_max',ppmax,...
            'Setpts',setpts);
        system(comLeft);
        
        comRight = createFFmpegCommand(appData.VidName,outputRight,...
            'Crop',[appData.vidROI.Position(1,1),0;...
            appData.VR.Width-appData.vidROI.Position(1,1),appData.VR.Height],...
            'Negate',isNegated,'Duration',duration,...
            'Quality',quality,'Codec',appData.Codec,...
            'Rotation',appData.Rotation,'Blur',gBlur,...
            'SeekTime',seekTime,...
            'PP_min',ppmin,'PP_max',ppmax,...
            'Setpts',setpts);
        system(comRight);
        
        
    case 'H'
        outputTop = strrep(vidname_out_full,appData.VidExt,...
            ['_top',out_append,'.mp4']);
        outputBottom = strrep(vidname_out_full,appData.VidExt,...
            ['_bottom',out_append,'.mp4']);
        
        comTop = createFFmpegCommand(appData.VidName,outputTop,...
            'Crop',[0,0;appData.frameWidth,appData.vidROI.Position(1,2)],...
            'Quality',quality,'Duration',duration,...
            'Negate',isNegated,'Codec',appData.Codec,...
            'Rotation',appData.Rotation,'Blur',gBlur,...
            'SeekTime',seekTime,...
            'PP_min',ppmin,'PP_max',ppmax,...
            'Setpts',setpts);
        system(comTop);
        
        comBottom = createFFmpegCommand(appData.VidName,outputBottom,...
            'Crop',[0,appData.vidROI.Position(1,2);...
            appData.frameWidth,appData.frameHeight - appData.vidROI.Position(1,2)],...
            'Quality',quality,'Duration',duration,...
            'Negate',isNegated,'Codec',appData.Codec,...
            'Rotation',appData.Rotation,'Blur',gBlur,...
            'SeekTime',seekTime,...
            'PP_min',ppmin,'PP_max',ppmax,...
            'Setpts',setpts);
        system(comBottom);
        
        
    case 'C'
        outputCrop = strrep(vidname_out_full,appData.VidExt,...
            ['_cropped',out_append,'.mp4']);
        
        com = createFFmpegCommand(appData.VidName,outputCrop,...
            'Crop',[appData.vidROI.Position([1,2]);...
            appData.vidROI.Position([3,4])],...
            'Negate',isNegated,'Duration',duration,...
            'Codec',appData.Codec,'Quality',quality,...
            'Rotation',appData.Rotation,'Blur',gBlur,...
            'SeekTime',seekTime,...
            'PP_min',ppmin,'PP_max',ppmax,...
            'Setpts',setpts);
        system(com);
        
        
end

function newText = strrep_multi(origText,oldSubCell,newSub)
% newText = STRREP_MULTI(origText,oldSubCell,newSubCell)
% Replace string values in origText specified in oldSubCell with values in
% newSub.
% If newSub is a character vector, then each value in oldSubCell is
% replaced with that value. If it is a cell array, then it must
% be exactly the length of oldSubCell, and each element is replaced such
% that oldSubCell{i} is replaced with newSubCell{i}
% This process is done iteratively. To avoid unexpected results, avoid
% having overlapping values in oldSubCell and newSub

if iscell(newSub)
    if length(newSub) ~= length(oldSubCell)
        error('newSub and oldSubCell are not the same length')
    end
end

stringIn = origText;


if ~iscell(newSub)
    for i = 1:length(oldSubCell)
        stringOut = strrep(stringIn,oldSubCell{i},newSub);
        stringIn = stringOut;
    end
else
    for i = 1:length(oldSubCell)
        stringOut = strrep(stringIn,oldSubCell{i},newSub{i});
        stringIn = stringOut;
    end
end
newText = stringOut;